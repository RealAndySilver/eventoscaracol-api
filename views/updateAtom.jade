include head
#login_container
	#logo 
		img(src="../../../../images/logo_caracol.png", width="220px", height="200px")
	#form_container
		form(method='post',action='/UpdateItem', name="form",enctype="multipart/form-data")
			fieldset(style="width:230px;")
				legend Información
				label(for='name') Título ó Nombre del Item para #{menuItem.name}:
				p
				input(class="input_textfield",type='text',name='name',id='name',value="#{atom.name}")
				p
				label(for='short_detail') Descripción corta:
				p
				input(class="input_textfield",type='text',name='short_detail',id='short_detail', value="#{atom.short_detail}")
				p
				label(for='detail') Descripción ó detalle del Item:
				p
				textarea(class="input_textarea",rows='5',cols='29',name='detail') #{atom.detail}
			p
			fieldset(style="width:230px;")
				legend Tipo de Publicación 
				-if (atom.feature_type=="normal")
					input(type="radio", name="feature_type", value="normal", checked) 
					|Normal
					br
					input(type="radio", name="feature_type", value="destacado")
					|Destacado
					br
					input(type="radio", name="feature_type", value="especial") 
					|Especial
				-if (atom.feature_type=="destacado")
					input(type="radio", name="feature_type", value="normal") 
					|Normal
					br
					input(type="radio", name="feature_type", value="destacado", checked)
					|Destacado
					br
					input(type="radio", name="feature_type", value="especial") 
					|Especial
				-if (atom.feature_type=="especial")
					input(type="radio", name="feature_type", value="normal") 
					|Normal
					br
					input(type="radio", name="feature_type", value="destacado")
					|Destacado
					br
					input(type="radio", name="feature_type", value="especial", checked) 
					|Especial
			p
			fieldset(style="width:230px;")
				legend Media
				label(for='image_url') Imagen Principal:
				br
				span(style="color:#ff0c8a; font-size:10px;") (Max 800px x 600px):
				p
				input(class="file_input",type="file", id="image_url", name="image_url", value="no", style="width:230px;")
				#upload_preview
					img(src="#{atom.image_url}")
				//input(class="input_textfield",type='text',name='image_url',id='image_url')
				p
				label(for='thumb_url') Imagen Ícono:
				br
				span(style="color:#ff0c8a; font-size:10px;") (Max 750px x 750px):
				p
				input(class="file_input",type="file", id="thumb_url", name="thumb_url", value="no", style="width:230px;")
				#upload_preview 
					img(src="#{atom.thumb_url}")
				//input(class="input_textfield",type='text',name='thumb_url',id='thumb_url')
				p
				label(for='youtube_url') ID de video de Youtube:
				p
				input(class="input_textfield",type='text',name='youtube_url',id='youtube_url',value="#{atom.youtube_url}")
			p
			-if(menuItem.type=="eventos")
				-var date=new Date(atom.event_time);
				//-var dateFormatted = date.getDay()+'-'+date.getMonth()+'-'+date.getFullYear()+'T'+date.getHours()+':'+date.getMinutes();
				fieldset(style="width:230px;")
					legend Tiempo
					label(for='thumb_url') Fecha y hora del evento: 
					input(type="datetime-local", name="event_time")
					div Se reemplazará: 
						br
						-var hour = new Date(date);
						-var finaltime = new Date(date);
						-finaltime.setHours(hour.getHours()-5);
						span(style="color:#ff0cb2; font-style:italic; font-size:12px;") #{finaltime}
			-else
				input(type='hidden',name='event_time',id='event_time',value='0')
			p
			
			fieldset(style="width:230px;")
				legend URL Externa
				br
				input(class="input_textfield",type='text',name='external_url',id='external_url', value="#{atom.external_url}")
				p
				-if (atom.open_inside=="no")
					input(type="radio", name="open_inside", value="no", checked)
					|No abrir URL
					br
					input(type="radio", name="open_inside", value="inside")
					|Abrir dentro de la App
					br
					input(type="radio", name="open_inside", value="outside") 
					|Abrir fuera de la App
				-if (atom.open_inside=="inside")
					input(type="radio", name="open_inside", value="no")
					|No abrir URL
					br
					input(type="radio", name="open_inside", value="inside", checked)
					|Abrir dentro de la App
					br
					input(type="radio", name="open_inside", value="outside") 
					|Abrir fuera de la App
				-if (atom.open_inside=="outside")
					input(type="radio", name="open_inside", value="no")
					|No abrir URL
					br
					input(type="radio", name="open_inside", value="inside")
					|Abrir dentro de la App
					br
					input(type="radio", name="open_inside", value="outside", checked) 
					|Abrir fuera de la App
			p
			fieldset(style="width:220px;")
				legend Relacionar
				label(for='location_id') Asignar una Locación:
				select(name="location_id")
					option(value="") Ninguna
					each location, index in locations
						-if(atom.location_id==location._id)
							option(value="#{location._id}", selected="selected") #{location.name}
						-else
							option(value="#{location._id}") #{location.name}
				p
				label(for='location_id') Asignar una Categoría:
				p
				each categoryfather, index in categoryfathers
					script.
						var i=0;
					fieldset(style="width:200px;")
						legend #{categoryfather.name}
						select(name="category", style="width:190px;")
							option(value='{"categoryfather_id":"0", "categoryfather_name":"Ninguno", "categoryson_name":"Ninguno", "categoryson_id":"0"}') Ninguno
							each categoryson, index2 in categorysons
								-if(categoryfather._id==categoryson.categoryfather_id)
									option(value='{"categoryfather_id":"#{categoryfather._id}", "categoryfather_name":"#{categoryfather.name}", "categoryson_name":"#{categoryson.name}", "categoryson_id":"#{categoryson._id}"}', id="#{index}#{index2}") #{categoryson.name}
									each category_item, index3 in atom.category_list
										script.
											if("#{category_item.categoryson_id}"=="#{categoryson._id}"){
												if(i==0){
													document.getElementById("#{index}#{index2}").selected=true;
													
													console.log("i= "+i+" index:#{index}#{index2} puesto: #{categoryson.name}");
													i++;
												}
											}
						select(name="category", style="width:190px;")
							option(value='{"categoryfather_id":"0", "categoryfather_name":"Ninguno", "categoryson_name":"Ninguno", "categoryson_id":"0"}') Ninguno
							each categoryson, index2 in categorysons
								-if(categoryfather._id==categoryson.categoryfather_id)
									option(value='{"categoryfather_id":"#{categoryfather._id}", "categoryfather_name":"#{categoryfather.name}", "categoryson_name":"#{categoryson.name}", "categoryson_id":"#{categoryson._id}"}', id="#{index}#{index2}b") #{categoryson.name}
									each category_item, index3 in atom.category_list
										script.
											if("#{category_item.categoryson_id}"=="#{categoryson._id}"){
												if(i==1){
													i++;
												}
												else{
													document.getElementById("#{index}#{index2}b").selected=true;
													console.log("i= "+i+" index:#{index}#{index2}b puesto: #{categoryson.name}");
												}
											}
						script.
							i = 0;
					p

				p
			p
			p
			p
			fieldset(style="width:230px;")
				legend Mensaje para Redes Sociales
				p
				textarea(class="input_textarea",rows='5',cols='29',name='social_message') #{atom.social_message}
			p
			fieldset(style="width:230px;")
				//legend Prioridad
				p
				label(for='priority') Prioridad: 
					select(name="priority", style="width:100px;")
						-for(var i=1; i<atom_qty+10; i++)
							-if(i==atom.priority)
								option(value="#{i}", selected="selected") #{i}
							-else
								option(value="#{i}") #{i}
				p
				div(style="font-style:italic;font-size:12px; color:#ff0cb2;") Para mantener el orden ideal, evita asignar a dos items el mismo número de prioridad.	
			p
			input(type='hidden',name='previous_event_time',id='previous_event_time',value='#{atom.event_time}')
			input(type='hidden',name='app_id',id='app_id',value='#{app._id}')
			input(type='hidden',name='app_name',id='app_name',value='#{app.name}')
			input(type='hidden',name='menu_item_id',id='menu_item_id',value='#{menuItem._id}')
			input(type='hidden',name='type',id='type',value='#{menuItem.type}')
			input(type='hidden',name='admin_id',id='admin_id',value='#{admin._id}')
			input(type='hidden',name='atom_id',id='atom_id',value='#{atom._id}')
			p
			input(class="submit_button",type='submit',name='submit',value='Actualizar')
			input(class="submit_button",type='button',name='cancel',value='Cancelar')
			p
			.errorText #{error}
			script.
				var btn = document.forms['form'].elements["cancel"];
				btn.onclick = function(){
					window.history.back(-1);
				};
